function pint=integr_order(opt)
% pint = integr_order(opt)
%
% Returns the gaussian integration points and weights for a given type of elements
%
% Input:
%
% opt: 
%       dim : dimension of elements 1, 2, 3
%       el_type : e.g. 'triangle','quad','prism','hex'
% 
% Output:
% pint : [np x ndim+1] Martix that contains the integration points
%       in local coordinates
%       np is the number of points
%       ndim is the dimension of the problem plus the integration weights
%
% Version : 1.0
% Author : George Kourakos
% email: giorgk@gmail.com
% web : http://groundwater.ucdavis.edu/msim
% Date 18-Dec_2012
% Department of Land Air and Water
% University of California Davis

if opt.dim ==1
    if ~isfield(opt,'int_ord')
        opt.int_ord=4;
    end
    if opt.int_ord==1;
        pint=[0 2];
    elseif opt.int_ord==2;
        pint=[1/sqrt(3) 1;-1/sqrt(3) 1];
    elseif opt.int_ord==3
        pint=[0 8/9; -sqrt(3/5) 5/9; sqrt(3/5) 8/9];
    elseif opt.int_ord==4;
        pint=[-sqrt((3-2*sqrt(6/5))/7) (18+sqrt(30))/36;...
               sqrt((3-2*sqrt(6/5))/7) (18+sqrt(30))/36;...
              -sqrt((3+2*sqrt(6/5))/7) (18-sqrt(30))/36;
               sqrt((3+2*sqrt(6/5))/7) (18-sqrt(30))/36];
    end
elseif opt.dim==2
    switch opt.el_type
        case 'triangle'
            if ~isfield(opt,'int_ord')
                opt.int_ord=6;
            end
            if opt.int_ord==2;
                pint=[1/3 1/3 1];
            elseif opt.int_ord==3;
                pint=[1/2 0 1/3;1/2 1/2 1/3;0 1/2 1/3];
            elseif opt.int_ord==4;

                pint=[1/3   1/3 -27/48;...
                      11/15 2/15 25/48;...
                      2/15  2/15 25/48;...
                      2/15 11/15 25/48];
            elseif opt.int_ord==6;
                a=0.05971587;b=0.47014206;
                c=0.10128651;d=0.79742699;
                pint=[1/3 1/3 0.225;...
                       b   a 0.13239415;...
                       b   b 0.13239415;...
                       a   b 0.13239415;...
                       c   d 0.12593918;...
                       c   c 0.12593918;...
                       d   c 0.12593918];
            end
            case 'quad'
                if ~isfield(opt,'int_ord')
                    opt.int_ord=3;
                end
                if opt.int_ord==3
                    pint=[-0.77460  0.77460 0.555556 0.555556;...
                           0       -0.77460 0.888889 0.555556;...
                           0.77460 -0.77460 0.555556 0.555556;...
                           0.77460  0       0.555556 0.555556;...
                           0.77460  0.77460 0.555556 0.888889;...
                           0        0.77460 0.888889 0.555556;...
                          -0.77460  0.77460 0.555556 0.555556;...
                          -0.77460  0       0.555556 0.888889;...
                           0        0       0.888889 0.888889];
                       pint=[pint(:,1:2) pint(:,3).*pint(:,4)];
                end
    end
                
elseif opt.dim==3
    switch opt.el_type
        case 'prism'
            switch opt.el_order
                case 'linear'
%                     pint=[1/3 1/3 -1/sqrt(3) 0.5;...
%                           1/3 1/3  1/sqrt(3) 0.5];
                    pint=[2/3 1/6 1/sqrt(3) 1/6;...
                          1/6 2/3 1/sqrt(3) 1/6;...
                          1/6 1/6 1/sqrt(3) 1/6;...
                          2/3 1/6 -1/sqrt(3) 1/6;...
                          1/6 2/3 -1/sqrt(3) 1/6;...
                          1/6 1/6 -1/sqrt(3) 1/6];
                case 'quadratic'
                    pint=[1/6 1/6 -sqrt(3/5) 5/54;...
                          4/6 1/6 -sqrt(3/5) 5/54;...
                          1/6 4/6 -sqrt(3/5) 5/54;...
                          1/6 1/6  sqrt(3/5) 5/54;...
                          4/6 1/6  sqrt(3/5) 5/54;...
                          1/6 4/6  sqrt(3/5) 5/54;...
                          1/6 1/6 0 8/54;...
                          4/6 1/6 0 8/54;...
                          1/6 4/6 0 8/54];
            end
        case 'hex'
            if ~isfield(opt,'int_ord')
                opt.int_ord=2;
            end
            if opt.int_ord==2
                pint=[-1/sqrt(3) -1/sqrt(3) -1/sqrt(3) 1 1 1;...
                      -1/sqrt(3)  1/sqrt(3) -1/sqrt(3) 1 1 1;...
                       1/sqrt(3)  1/sqrt(3) -1/sqrt(3) 1 1 1;...
                       1/sqrt(3) -1/sqrt(3) -1/sqrt(3) 1 1 1;...
                      -1/sqrt(3) -1/sqrt(3)  1/sqrt(3) 1 1 1;...
                      -1/sqrt(3)  1/sqrt(3)  1/sqrt(3) 1 1 1;...
                       1/sqrt(3)  1/sqrt(3)  1/sqrt(3) 1 1 1;...
                       1/sqrt(3) -1/sqrt(3)  1/sqrt(3) 1 1 1];
               pint=[pint(:,1:3) pint(:,4).*pint(:,5).*pint(:,6)];
            elseif opt.int_ord==3
                pint=[-sqrt(15)/5 -sqrt(15)/5 -sqrt(15)/5 5/9 5/9 5/9;...
                      	  0       -sqrt(15)/5 -sqrt(15)/5 8/9 5/9 5/9;...
                       sqrt(15)/5 -sqrt(15)/5 -sqrt(15)/5 5/9 5/9 5/9;...
                      -sqrt(15)/5      0      -sqrt(15)/5 5/9 8/9 5/9;...
                          0            0      -sqrt(15)/5 8/9 8/9 5/9;...
                       sqrt(15)/5      0      -sqrt(15)/5 5/9 8/9 5/9;...
                      -sqrt(15)/5  sqrt(15)/5 -sqrt(15)/5 5/9 5/9 5/9;...
                      	  0        sqrt(15)/5 -sqrt(15)/5 8/9 5/9 5/9;...
                       sqrt(15)/5  sqrt(15)/5 -sqrt(15)/5 5/9 5/9 5/9;...
                      -sqrt(15)/5 -sqrt(15)/5      0      5/9 5/9 8/9;...
                      	  0       -sqrt(15)/5      0      8/9 5/9 8/9;...
                       sqrt(15)/5 -sqrt(15)/5      0      5/9 5/9 8/9;...
                      -sqrt(15)/5      0           0      5/9 8/9 8/9;...
                          0            0           0      8/9 8/9 8/9;...
                       sqrt(15)/5      0           0      5/9 8/9 8/9;...
                      -sqrt(15)/5  sqrt(15)/5      0      5/9 5/9 8/9;...
                      	  0        sqrt(15)/5      0      8/9 5/9 8/9;...
                       sqrt(15)/5  sqrt(15)/5      0      5/9 5/9 8/9;...
                      -sqrt(15)/5 -sqrt(15)/5  sqrt(15)/5 5/9 5/9 5/9;...
                      	  0       -sqrt(15)/5  sqrt(15)/5 8/9 5/9 5/9;...
                       sqrt(15)/5 -sqrt(15)/5  sqrt(15)/5 5/9 5/9 5/9;...
                      -sqrt(15)/5      0       sqrt(15)/5 5/9 8/9 5/9;...
                          0            0       sqrt(15)/5 8/9 8/9 5/9;...
                       sqrt(15)/5      0       sqrt(15)/5 5/9 8/9 5/9;...
                      -sqrt(15)/5  sqrt(15)/5  sqrt(15)/5 5/9 5/9 5/9;...
                      	  0        sqrt(15)/5  sqrt(15)/5 8/9 5/9 5/9;...
                       sqrt(15)/5  sqrt(15)/5  sqrt(15)/5 5/9 5/9 5/9];
               pint=[pint(:,1:3) pint(:,4).*pint(:,5).*pint(:,6)];
            end
    end
end